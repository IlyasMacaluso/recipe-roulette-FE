/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as RouletteImport } from './routes/roulette'
import { Route as RecipeResultsImport } from './routes/recipe-results'
import { Route as RecipeImport } from './routes/recipe'
import { Route as NotFoundImport } from './routes/not-found'
import { Route as HistoryImport } from './routes/history'
import { Route as FavoritedImport } from './routes/favorited'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const RouletteRoute = RouletteImport.update({
  path: '/roulette',
  getParentRoute: () => rootRoute,
} as any)

const RecipeResultsRoute = RecipeResultsImport.update({
  path: '/recipe-results',
  getParentRoute: () => rootRoute,
} as any)

const RecipeRoute = RecipeImport.update({
  path: '/recipe',
  getParentRoute: () => rootRoute,
} as any)

const NotFoundRoute = NotFoundImport.update({
  path: '/not-found',
  getParentRoute: () => rootRoute,
} as any)

const HistoryRoute = HistoryImport.update({
  path: '/history',
  getParentRoute: () => rootRoute,
} as any)

const FavoritedRoute = FavoritedImport.update({
  path: '/favorited',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/favorited': {
      id: '/favorited'
      path: '/favorited'
      fullPath: '/favorited'
      preLoaderRoute: typeof FavoritedImport
      parentRoute: typeof rootRoute
    }
    '/history': {
      id: '/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryImport
      parentRoute: typeof rootRoute
    }
    '/not-found': {
      id: '/not-found'
      path: '/not-found'
      fullPath: '/not-found'
      preLoaderRoute: typeof NotFoundImport
      parentRoute: typeof rootRoute
    }
    '/recipe': {
      id: '/recipe'
      path: '/recipe'
      fullPath: '/recipe'
      preLoaderRoute: typeof RecipeImport
      parentRoute: typeof rootRoute
    }
    '/recipe-results': {
      id: '/recipe-results'
      path: '/recipe-results'
      fullPath: '/recipe-results'
      preLoaderRoute: typeof RecipeResultsImport
      parentRoute: typeof rootRoute
    }
    '/roulette': {
      id: '/roulette'
      path: '/roulette'
      fullPath: '/roulette'
      preLoaderRoute: typeof RouletteImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  FavoritedRoute,
  HistoryRoute,
  NotFoundRoute,
  RecipeRoute,
  RecipeResultsRoute,
  RouletteRoute,
  SettingsRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/favorited",
        "/history",
        "/not-found",
        "/recipe",
        "/recipe-results",
        "/roulette",
        "/settings"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/favorited": {
      "filePath": "favorited.jsx"
    },
    "/history": {
      "filePath": "history.jsx"
    },
    "/not-found": {
      "filePath": "not-found.jsx"
    },
    "/recipe": {
      "filePath": "recipe.jsx"
    },
    "/recipe-results": {
      "filePath": "recipe-results.jsx"
    },
    "/roulette": {
      "filePath": "roulette.jsx"
    },
    "/settings": {
      "filePath": "settings.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
